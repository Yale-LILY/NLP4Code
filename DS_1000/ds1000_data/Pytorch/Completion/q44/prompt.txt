Problem:

I have a logistic regression model using Pytorch, where my input is high-dimensional and my output must be a scalar - 0, 1 or 2.

I'm using a linear layer combined with a softmax layer to return a n x 3 tensor, where each column represents the probability of the input falling in one of the three classes (0, 1 or 2).

However, I must return a n x 1 tensor, and I want to somehow pick the lowest probability for each input and create a tensor indicating which class had the lowest probability. How can I achieve this using Pytorch?

To illustrate, my Softmax outputs this:

[[0.2, 0.1, 0.7],
 [0.6, 0.3, 0.1],
 [0.15, 0.8, 0.05]]
And I must return this:

[[1],
 [2],
 [2]]


A:

<code>
import numpy as np
import pandas as pd
import torch
softmax_output = load_data()
</code>
y = ... # put solution in this variable
BEGIN SOLUTION
<code>
