Problem:
Iâ€™m trying to solve a simple ODE to visualise the temporal response, which works well for constant input conditions using the new solve_ivp integration API in SciPy. For example:
def dN1_dt_simple(t, N1):
    return -100 * N1
sol = solve_ivp(fun=dN1_dt_simple, t_span=[0, 100e-3], y0=[N0,])
However, I wonder is it possible to plot the response to a time-varying input? For instance, rather than having y0 fixed at N0, can I find the response to a simple sinusoid? Specifically, I want to add `t-sin(t) if 0 < t < 2pi else 2pi` to original y. The result I want is values of solution at time points.
Is there a compatible way to pass time-varying input conditions into the API?
A:
<code>
import scipy.integrate
import numpy as np
N0 = 1
time_span = [0, 10]
</code>
solve this question with example variable `sol` and set `result = sol.y`
BEGIN SOLUTION
<code>