import pickle
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--test_case", type=int, default=1)
args = parser.parse_args()


import matplotlib.pyplot as plt

a, b = 1, 1
c, d = 3, 4

# draw a line that pass through (a, b) and (c, d)
# do not just draw a line segment
# set the xlim and ylim to be between 0 and 5
# SOLUTION START
[insert]
# SOLUTION END
plt.savefig('result/plot.png', bbox_inches ='tight')

#Image Testing
from PIL import Image
import numpy as np
code_img = np.array(Image.open('result/plot.png'))
oracle_img = np.array(Image.open('ans/oracle_plot.png'))
sample_image_stat = (
    code_img.shape == oracle_img.shape
    and np.allclose(code_img, oracle_img)
)
if sample_image_stat:
    with open('result/result_1.pkl', 'wb') as file:
        # if image test passed, we save True to the result file
        pickle.dump(True, file)    
        


# Testing
ax = plt.gca()

import matplotlib

assert len(ax.get_lines()) == 1
assert isinstance(ax.get_lines()[0], matplotlib.lines._AxLine)
assert ax.get_xlim()[0] == 0 and ax.get_xlim()[1] == 5
assert ax.get_ylim()[0] == 0 and ax.get_ylim()[1] == 5
with open('result/result_1.pkl', 'wb') as file:
    # or if execution-based test passed, we save True to the result file
    pickle.dump(True, file)     
