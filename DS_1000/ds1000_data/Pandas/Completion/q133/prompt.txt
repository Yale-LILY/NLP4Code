Problem:
I am trying to find col duplicates rows in a pandas dataframe.
df=pd.DataFrame(data=[[1,1,2,5],[1,3,4,1],[4,1,2,5],[5,1,4,9],[1,1,2,5]],columns=['val', 'col1','col2','3col'])
df
Out[15]: 
   val  col1  col2  3col
0    1     1     2     5
1    1     3     4     1
2    4     1     2     5
3    5     1     4     9
4    1     1     2     5
duplicate_bool = df.duplicated(subset=['col1','col2', '3col'], keep='first')
duplicate = df.loc[duplicate_bool == True]
duplicate
Out[16]: 
   val  col1  col2  3col
2    1     1     2      5
4    1     1     2      5


Is there a way to add a column referring to the index of the first duplicate (the one kept)
duplicate
Out[16]: 
   val  col1  col2 3col   index_original
2     4    1     2      5         0
4     1    1     2      5         0


Note: df could be very very big in my case....


A:
<code>
import pandas as pd


df=pd.DataFrame(data=[[1,1,2,5],[1,3,4,1],[4,1,2,5],[5,1,4,9],[1,1,2,5]],columns=['val', 'col1','col2','3col'])
</code>
result = ... # put solution in this variable
BEGIN SOLUTION
<code>
