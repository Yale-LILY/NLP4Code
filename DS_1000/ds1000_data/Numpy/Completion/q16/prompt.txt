Problem:
Following-up from this question years ago, is there a "shift" function in numpy? Ideally it can be applied to 2-dimensional arrays, and the numbers of shift are different among rows.
Example:
In [76]: xs
Out[76]: array([[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.],
		 [ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.]])
In [77]: shift(xs, [1,3])
Out[77]: array([[nan,   0.,   1.,   2.,   3.,   4.,   5.,   6.,	7.,	8.], [nan, nan, nan, 1.,  2.,  3.,  4.,  5.,  6.,  7.])
In [78]: shift(xs, [-2,-3])
Out[78]: array([[2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  nan,  nan], [4.,  5.,  6.,  7.,  8.,  9., 10., nan, nan, nan]])
Any help would be appreciated.
A:
<code>
import numpy as np
a = np.array([[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.],
		[1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.]])
shift = [-2, 3]
</code>
result = ... # put solution in this variable
BEGIN SOLUTION
<code>
