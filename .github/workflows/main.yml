name: CI

# run on pushes to main + PR creation/push
on:
  push:
    branches:
      - main
  pull_request:

jobs:

  # # Code style and linting
  # STYLE:
  #   name: STYLE
  #   # runs-on: self-hosted
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.9'

  #     # - name: Test SSL workaround
  #     #   run: python -m pip install --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --trusted-host pypi.org --upgrade pip

  #     # - name: Setup Python
  #     #   uses: actions/setup-python@v2
  #     #   env:
  #     #     # Log useful debugging information.
  #     #     ACTIONS_STEP_DEBUG: 'true'
  #     #   with:
  #     #     python-version: 3.8

  #     - name: Installation
  #       run: |
  #         pip install black
  #         pip install flake8
  #     - name: Debug info
  #       run: |
  #         pwd
  #         ls -la
  #         which pip
  #         pip --version
  #         which python
  #         python --version
  #         pip freeze
  #         df -h
  #         echo $HOME
  #     - name: Run black
  #       run: black --check .

  #     - name: Run flake8
  #       run: flake8 --count .

  # Unit tests
  TESTS:
    name: TESTS
    runs-on: self-hosted # lada
    # runs-on: ubuntu-22.04

    # do not expose sensitive environment variables in this yaml
    env:
    # TODO: dynamically choose GPUs if tests end up using them
      CUDA_VISIBLE_DEVICES: 1

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Set up installation
        run: pip install --upgrade pip virtualenv

      - name: Set up + activate virtual environment
        run: |
          rm -rf .venv
          python3 -m venv .venv
          . .venv/bin/activate
          echo $PATH
          # TODO: check why this doesn't work
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
          echo "PATH=$PATH" >> $GITHUB_ENV
      
      - name: Pre-installation upgrade
        run: |
          . .venv/bin/activate
          pip install --upgrade pip
          pip install --upgrade setuptools
          pip install --upgrade wheel

      - name: Debug info
        run: |
          . .venv/bin/activate
          pwd
          ls -la
          which pip
          pip --version
          which python
          python --version
          pip freeze
          df -h
          echo $HOME
          echo $PATH
          export

      - name: Installation
        run: |
          . .venv/bin/activate
          pip install -r requirements.txt

      - name: Post-installation/setup debug info
        run: |
          . .venv/bin/activate
          pwd
          ls -la
          which pip
          pip --version
          which python
          python --version
          pip freeze
          df -h
          echo $HOME
          echo $PATH
          export

      - name: Test datasets
        run: |
          . .venv/bin/activate
          ls -la
          python -m unittest tests/test_datasets.py

      - name: Test executors
        run: |
          . .venv/bin/activate
          python -m unittest tests/test_executors.py

      - name: Test inference pipeline
        run: |
          . .venv/bin/activate
          python -m unittest tests/test_inference_pipeline.py

      - name: Test models
        run: |
          . .venv/bin/activate
          python -m unittest tests/test_models.py