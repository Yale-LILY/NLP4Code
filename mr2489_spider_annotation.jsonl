{"data_file": "data/spider/train_spider_processed_v2.jsonl", "total_num_examples": 6997, "annotation_indices": [2387, 5555, 3621, 6940, 5157, 2108, 6320, 5366, 3203, 6543, 2704, 142, 1978, 5282, 6132, 3726, 2096, 1827, 809, 646, 5173, 433, 6669, 2503, 1256, 6918, 6846, 75, 604, 5088, 2098, 5195, 4444, 5590, 6537, 4522, 3633, 899, 4008, 3641, 451, 5446, 3218, 1668, 1675, 5965, 93, 5427, 3662, 4513, 664, 5449, 4043, 6578, 4366, 5075, 1155, 5219, 245, 3474, 443, 3532, 1677, 3480, 1452, 3862, 4093, 6911, 3055, 3643, 1654, 2077, 5073, 980, 2629, 3422, 4695, 5578, 6284, 367, 5754, 5208, 4252, 1797, 4846, 868, 2005, 3438, 5147, 1329, 6141, 5958, 2015, 6277, 706, 6619, 3580, 4610, 6987, 1869]}
{"metadata": {"db_id": "csu_1", "query": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"", "query_toks": ["SELECT", "sum", "(", "t1.graduate", ")", "FROM", "discipline_enrollments", "AS", "t1", "JOIN", "campuses", "AS", "t2", "ON", "t1.campus", "=", "t2.id", "WHERE", "t1.year", "=", "2004", "AND", "t2.campus", "=", "``", "San", "Francisco", "State", "University", "''"], "query_toks_no_value": ["select", "sum", "(", "t1", ".", "graduate", ")", "from", "discipline_enrollments", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "campus", "=", "value"], "question": "How many people graduated from San Francisco State University in 2004?", "question_toks": ["How", "many", "people", "graduated", "from", "San", "Francisco", "State", "University", "in", "2004", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[4, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 2004.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Campuses": ["Id", "Campus", "Location", "County", "Year"], "csu_fees": ["Campus", "Year", "CampusFee"], "degrees": ["Year", "Campus", "Degrees"], "discipline_enrollments": ["Campus", "Discipline", "Year", "Undergraduate", "Graduate"], "enrollments": ["Campus", "Year", "TotalEnrollment_AY", "FTE_AY"], "faculty": ["Campus", "Year", "Faculty"]}, "answer": [[5017]], "db_path": "data/spider/database/csu_1/csu_1.sqlite"}, "annotation": "id = Campuses[Campuses['campus'] == 'San Francisco State University']['id'].tolist()[0]; answer = discipline_enrollments[discipline_enrollments['campus'] == id]['graduate'].sum();", "exec_result": "Expected: [[5017]] but got 5017"}
{"metadata": {"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"", "query_toks": ["SELECT", "t3.characteristic_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "sesame", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value"], "question": "What are all the characteristic names of product \"sesame\"?", "question_toks": ["What", "are", "all", "the", "characteristic", "names", "of", "product", "``", "sesame", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"sesame\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Characteristic_Types": ["characteristic_type_code", "characteristic_type_description"], "Ref_Colors": ["color_code", "color_description"], "Ref_Product_Categories": ["product_category_code", "product_category_description", "unit_of_measure"], "Characteristics": ["characteristic_id", "characteristic_type_code", "characteristic_data_type", "characteristic_name", "other_characteristic_details"], "Products": ["product_id", "color_code", "product_category_code", "product_name", "typical_buying_price", "typical_selling_price", "product_description", "other_product_details"], "Product_Characteristics": ["product_id", "characteristic_id", "product_characteristic_value"]}, "answer": [["error"], ["fast"]], "db_path": "data/spider/database/products_gen_characteristics/products_gen_characteristics.sqlite"}, "annotation": "product_id = Products[Products['product_name'] == 'sesame']['product_id'].tolist()[0]; characteristic_id = Product_Characteristics[Product_Characteristics['product_id'] == product_id]['characteristic_id'].tolist(); answer = Characteristics[Characteristics['characteristic_id'].isin(characteristic_id)]['characteristic_name'].tolist();", "exec_result": "Expected: [['error'], ['fast']] but got ['fast', 'error']"}
{"metadata": {"db_id": "music_1", "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating", "query_toks": ["SELECT", "f_id", ",", "genre_is", ",", "artist_name", "FROM", "song", "WHERE", "languages", "=", "``", "english", "''", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "f_id", ",", "genre_is", ",", "artist_name", "from", "song", "where", "languages", "=", "value", "order", "by", "rating"], "question": "What is the id, genre, and name of the artist for every English song ordered by ascending rating?", "question_toks": ["What", "is", "the", "id", ",", "genre", ",", "and", "name", "of", "the", "artist", "for", "every", "English", "song", "ordered", "by", "ascending", "rating", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 18, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"genre": ["g_name", "rating", "most_popular_in"], "artist": ["artist_name", "country", "gender", "preferred_genre"], "files": ["f_id", "artist_name", "file_size", "duration", "formats"], "song": ["song_name", "artist_name", "country", "f_id", "genre_is", "rating", "languages", "releasedate", "resolution"]}, "answer": [[4, "blues", "Enrique"], [5, "pop", "Michel"]], "db_path": "data/spider/database/music_1/music_1.sqlite"}, "annotation": "ordered = song[song['languages'] == 'english'].sort_values(by = ['rating']); answer = ordered.loc[:,['f_id', 'genre_is', 'artist_name']];", "exec_result": "   f_id genre_is artist_name\n3     4    blues     Enrique\n4     5      pop      Michel"}
