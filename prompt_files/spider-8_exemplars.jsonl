{"db_id": "game_injury", "query": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.injury", ")", "FROM", "injury_accident", "AS", "T1", "JOIN", "game", "AS", "T2", "ON", "T1.game_id", "=", "T2.id", "WHERE", "T2.season", ">", "2010"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "injury", ")", "from", "injury_accident", "as", "t1", "join", "game", "as", "t2", "on", "t1", ".", "game_id", "=", "t2", ".", "id", "where", "t2", ".", "season", ">", "value"], "question": "How many distinct kinds of injuries happened after season 2010?", "question_toks": ["How", "many", "distinct", "kinds", "of", "injuries", "happened", "after", "season", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[3, [0, [0, 18, true], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"stadium": ["id", "name", "Home_Games", "Average_Attendance", "Total_Attendance", "Capacity_Percentage"], "game": ["stadium_id", "id", "Season", "Date", "Home_team", "Away_team", "Score", "Competition"], "injury_accident": ["game_id", "id", "Player", "Injury", "Number_of_matches", "Source"]}, "answer": [[1]], "db_path": "data/spider/database/game_injury/game_injury.sqlite"}
{"db_id": "farm", "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'", "query_toks": ["SELECT", "Hosts", "FROM", "farm_competition", "WHERE", "Theme", "!", "=", "'Aliens", "'"], "query_toks_no_value": ["select", "hosts", "from", "farm_competition", "where", "theme", "!", "=", "value"], "question": "Return the hosts of competitions for which the theme is not Aliens?", "question_toks": ["Return", "the", "hosts", "of", "competitions", "for", "which", "the", "theme", "is", "not", "Aliens", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Aliens\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "farm": ["Farm_ID", "Year", "Total_Horses", "Working_Horses", "Total_Cattle", "Oxen", "Bulls", "Cows", "Pigs", "Sheep_and_Goats"], "farm_competition": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "competition_record": ["Competition_ID", "Farm_ID", "Rank"]}, "answer": [["Miley Cyrus Jared Leto and Karen Mok"], ["Leehom Wang and Kelly Rowland"], ["Alicia Keys"], ["Vanness Wu and Michelle Branch"], ["Shaggy and Coco Lee"]], "db_path": "data/spider/database/farm/farm.sqlite"}
{"db_id": "school_finance", "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school", "query_toks": ["SELECT", "avg", "(", "enrollment", ")", ",", "max", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "FROM", "school"], "query_toks_no_value": ["select", "avg", "(", "enrollment", ")", ",", "max", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "from", "school"], "question": "Show the average, maximum, minimum enrollment of all schools.", "question_toks": ["Show", "the", "average", ",", "maximum", ",", "minimum", "enrollment", "of", "all", "schools", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"School": ["School_id", "School_name", "Location", "Mascot", "Enrollment", "IHSAA_Class", "IHSAA_Football_Class", "County"], "budget": ["School_id", "Year", "Budgeted", "total_budget_percent_budgeted", "Invested", "total_budget_percent_invested", "Budget_invested_percent"], "endowment": ["endowment_id", "School_id", "donator_name", "amount"]}, "answer": [[519.375, 852, 287]], "db_path": "data/spider/database/school_finance/school_finance.sqlite"}
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.project_id", ",", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "project_id", ",", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the ids and details corresponding to projects for which there are more than two documents.", "question_toks": ["Return", "the", "ids", "and", "details", "corresponding", "to", "projects", "for", "which", "there", "are", "more", "than", "two", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Document_Types": ["Document_Type_Code", "Document_Type_Name", "Document_Type_Description"], "Ref_Budget_Codes": ["Budget_Type_Code", "Budget_Type_Description"], "Projects": ["Project_ID", "Project_Details"], "Documents": ["Document_ID", "Document_Type_Code", "Project_ID", "Document_Date", "Document_Name", "Document_Description", "Other_Details"], "Statements": ["Statement_ID", "Statement_Details"], "Documents_with_Expenses": ["Document_ID", "Budget_Type_Code", "Document_Details"], "Accounts": ["Account_ID", "Statement_ID", "Account_Details"]}, "answer": [[30, "Society Research project"], [35, "Internet of Things project"], [105, "Graph Database project"], [134, "Human Resource project"]], "db_path": "data/spider/database/cre_Docs_and_Epenses/cre_Docs_and_Epenses.sqlite"}
{"db_id": "local_govt_in_alabama", "query": "SELECT service_type_code FROM services ORDER BY service_type_code", "query_toks": ["SELECT", "service_type_code", "FROM", "services", "ORDER", "BY", "service_type_code"], "query_toks_no_value": ["select", "service_type_code", "from", "services", "order", "by", "service_type_code"], "question": "List the type of the services in alphabetical order.", "question_toks": ["List", "the", "type", "of", "the", "services", "in", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Services": ["Service_ID", "Service_Type_Code"], "Participants": ["Participant_ID", "Participant_Type_Code", "Participant_Details"], "Events": ["Event_ID", "Service_ID", "Event_Details"], "Participants_in_Events": ["Event_ID", "Participant_ID"]}, "answer": [["Birth Proof"], ["Death Proof"], ["Marriage"], ["Property Change"]], "db_path": "data/spider/database/local_govt_in_alabama/local_govt_in_alabama.sqlite"}
{"db_id": "cre_Theme_park", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1", "query_toks": ["SELECT", "avg", "(", "price_range", ")", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''", "AND", "pets_allowed_yn", "=", "1"], "query_toks_no_value": ["select", "avg", "(", "price_range", ")", "from", "hotels", "where", "star_rating_code", "=", "value", "and", "pets_allowed_yn", "=", "value"], "question": "Show the average price range of hotels that have 5 star ratings and allow pets.", "question_toks": ["Show", "the", "average", "price", "range", "of", "hotels", "that", "have", "5", "star", "ratings", "and", "allow", "pets", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"5\"", null], "and", [false, 2, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Hotel_Star_Ratings": ["star_rating_code", "star_rating_description"], "Locations": ["Location_ID", "Location_Name", "Address", "Other_Details"], "Ref_Attraction_Types": ["Attraction_Type_Code", "Attraction_Type_Description"], "Visitors": ["Tourist_ID", "Tourist_Details"], "Features": ["Feature_ID", "Feature_Details"], "Hotels": ["hotel_id", "star_rating_code", "pets_allowed_yn", "price_range", "other_hotel_details"], "Tourist_Attractions": ["Tourist_Attraction_ID", "Attraction_Type_Code", "Location_ID", "How_to_Get_There", "Name", "Description", "Opening_Hours", "Other_Details"], "Street_Markets": ["Market_ID", "Market_Details"], "Shops": ["Shop_ID", "Shop_Details"], "Museums": ["Museum_ID", "Museum_Details"], "Royal_Family": ["Royal_Family_ID", "Royal_Family_Details"], "Theme_Parks": ["Theme_Park_ID", "Theme_Park_Details"], "Visits": ["Visit_ID", "Tourist_Attraction_ID", "Tourist_ID", "Visit_Date", "Visit_Details"], "Photos": ["Photo_ID", "Tourist_Attraction_ID", "Name", "Description", "Filename", "Other_Details"], "Staff": ["Staff_ID", "Tourist_Attraction_ID", "Name", "Other_Details"], "Tourist_Attraction_Features": ["Tourist_Attraction_ID", "Feature_ID"]}, "answer": [[170031784.62282422]], "db_path": "data/spider/database/cre_Theme_park/cre_Theme_park.sqlite"}
{"db_id": "insurance_fnol", "query": "SELECT customer_phone FROM available_policies", "query_toks": ["SELECT", "customer_phone", "FROM", "available_policies"], "query_toks_no_value": ["select", "customer_phone", "from", "available_policies"], "question": "Find all the phone numbers.", "question_toks": ["Find", "all", "the", "phone", "numbers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Customers": ["Customer_ID", "Customer_name"], "Services": ["Service_ID", "Service_name"], "Available_Policies": ["Policy_ID", "policy_type_code", "Customer_Phone"], "Customers_Policies": ["Customer_ID", "Policy_ID", "Date_Opened", "Date_Closed"], "First_Notification_of_Loss": ["FNOL_ID", "Customer_ID", "Policy_ID", "Service_ID"], "Claims": ["Claim_ID", "FNOL_ID", "Effective_Date"], "Settlements": ["Settlement_ID", "Claim_ID", "Effective_Date", "Settlement_Amount"]}, "answer": [["+16(2)5838999222"], ["242.763.9214"], ["1-416-503-7735x94204"], ["(777)537-7792"], ["1-446-940-9907x257"], ["(379)862-8274x12620"], ["+85(6)1302858396"], ["1-797-927-3585x9321"], ["991.642.6485x822"], ["813.178.8211x557"], ["889-572-0609x552"], ["1-138-841-3073"], ["1-381-132-0127x3801"], ["00481937923"], ["405.090.8654x021"]], "db_path": "data/spider/database/insurance_fnol/insurance_fnol.sqlite"}
{"db_id": "cre_Theme_park", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "How_to_Get_There", "FROM", "Tourist_Attractions", "GROUP", "BY", "How_to_Get_There", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "how_to_get_there", "from", "tourist_attractions", "group", "by", "how_to_get_there", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which transportation method is used the most often to get to tourist attractions?", "question_toks": ["Which", "transportation", "method", "is", "used", "the", "most", "often", "to", "get", "to", "tourist", "attractions", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Hotel_Star_Ratings": ["star_rating_code", "star_rating_description"], "Locations": ["Location_ID", "Location_Name", "Address", "Other_Details"], "Ref_Attraction_Types": ["Attraction_Type_Code", "Attraction_Type_Description"], "Visitors": ["Tourist_ID", "Tourist_Details"], "Features": ["Feature_ID", "Feature_Details"], "Hotels": ["hotel_id", "star_rating_code", "pets_allowed_yn", "price_range", "other_hotel_details"], "Tourist_Attractions": ["Tourist_Attraction_ID", "Attraction_Type_Code", "Location_ID", "How_to_Get_There", "Name", "Description", "Opening_Hours", "Other_Details"], "Street_Markets": ["Market_ID", "Market_Details"], "Shops": ["Shop_ID", "Shop_Details"], "Museums": ["Museum_ID", "Museum_Details"], "Royal_Family": ["Royal_Family_ID", "Royal_Family_Details"], "Theme_Parks": ["Theme_Park_ID", "Theme_Park_Details"], "Visits": ["Visit_ID", "Tourist_Attraction_ID", "Tourist_ID", "Visit_Date", "Visit_Details"], "Photos": ["Photo_ID", "Tourist_Attraction_ID", "Name", "Description", "Filename", "Other_Details"], "Staff": ["Staff_ID", "Tourist_Attraction_ID", "Name", "Other_Details"], "Tourist_Attraction_Features": ["Tourist_Attraction_ID", "Feature_ID"]}, "answer": [["bus"]], "db_path": "data/spider/database/cre_Theme_park/cre_Theme_park.sqlite"}