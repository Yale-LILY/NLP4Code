"airports[airports['country'] == 'iceland']['elevation'].max()" NOTE: Capitalization of iceland (df item)
"match.winning_aircraft = match.winning_aircraft.astype('Int64')\nt1 = pd.merge(aircraft, match, left_on='aircraft_id', right_on='winning_aircraft')\nanswer = t1[['location', 'aircraft']]" NOTE: Had to change data type of column
"t1 = pd.merge(station, trip, left_on='id', right_on='start_station_id')\nanswer = t1[['lat', 'long']].mean()" NOTE: Old python execution didn't take into account math.isclose()
"answer = teachers[['firstname', 'lastname']].drop_duplicates()" NOTE: Need to sort the answers due to non-deterministic SQL return order
"answer = files.groupby('formats').size().rename('count').to_frame().reset_index()[['count', 'formats']]" NOTE: Need to switch order of columns to correct order
"t1 = pd.merge(station, status, left_on='id', right_on='station_id')\nt2 = t1.groupby(['id', 'name']).mean()\nt3 = t2[t2['bikes_available'] > 14].reset_index()\nt4 = station[station['installation_date'].str.startswith('12/')]\nt5 = pd.concat([t3, t4], ignore_index=True)\nanswer = t5[['name', 'id']].drop_duplicates()" NOTE: Made sorting in answer check convert everything to a string to fix int and str comparison failure
"t1 = pd.merge(student, enroll, left_on='stu_num', right_on='stu_num')\nt2 = pd.merge(t1, _class, left_on='class_code', right_on='class_code')\nt3 = pd.merge(t2, course, left_on='crs_code', right_on='crs_code')\nt4 = pd.merge(t3, department, left_on='dept_code_y', right_on='dept_code')\nt5 = t4[t4['dept_name'] == 'accounting']\nt6 = t4[t4['dept_name'] == 'computer info. systems']\nanswer = pd.merge(t5, t6, left_on='stu_fname', right_on='stu_fname')['stu_fname'].unique()" NOTE: Multiple dept_code must choose correct suffix
"t1 = artist[artist['country'] == 'bangladesh']\nt2 = song[song['rating'] > 7]\nanswer = t1[~t1['artist_name'].isin(t2['artist_name'])][['artist_name']]" NOTE: Capitalization and select only artist_name
"t1 = pd.merge(station_company, company, left_on='company_id', right_on='company_id')\nt2 = pd.merge(t1, gas_station, left_on='station_id', right_on='station_id')\nt3 = t2[t2['market_value'] > 100]\nanswer = t3['location']" NOTE: Correct with spider_execution updates
"answer = rooms[rooms['bedtype'] == 'king']['beds'].sum()" NOTE: Capitalization of df
