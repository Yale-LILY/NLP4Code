{"data_file": "/home/lily/an639/Code/lever_wip/results/spider-codex_davinci-2_fixed_shots/predictions_step_0_rank_0.jsonl", "total_num_examples": 1032, "evaluation_indices": [850, 561, 479, 178, 866, 253, 82, 514, 3, 959, 166, 884, 818, 370, 145, 273, 522, 355, 351, 674, 123, 359, 618, 233, 36, 740, 150, 216, 317, 620, 649, 743, 972, 610, 992, 155, 74, 666, 593, 446, 103, 816, 179, 173, 415, 234, 536, 487, 833, 611, 453, 93, 738, 748, 512, 694, 595, 911, 329, 760, 994, 414, 405, 541, 573, 38, 713, 554, 380, 322, 33, 410, 784, 749, 465, 238, 815, 251, 856, 367, 594, 668, 300, 915, 895, 729, 773, 334, 868, 1016, 391, 663, 844, 906, 485, 25, 1013, 131, 459, 128]}
{"metadata": {"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "GROUP", "BY", "Record_Company", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the record company shared by the most number of orchestras.", "question_toks": ["List", "the", "record", "company", "shared", "by", "the", "most", "number", "of", "orchestras", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"conductor": ["Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work"], "orchestra": ["Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format"], "performance": ["Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share"], "show": ["Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "answer": [["Decca Records"]], "db_path": "data/spider/database/orchestra/orchestra.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "SELECT avg(transcript_date) FROM Transcripts", "query_toks": ["SELECT", "avg", "(", "transcript_date", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts"], "question": "On average, when were the transcripts printed?", "question_toks": ["On", "average", ",", "when", "were", "the", "transcripts", "printed", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[5, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [[1989.9333333333334]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "wta_1", "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year"], "question": "Find the number of matches happened in each year.", "question_toks": ["Find", "the", "number", "of", "matches", "happened", "in", "each", "year", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"players": ["player_id", "first_name", "last_name", "hand", "birth_date", "country_code"], "matches": ["best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year"], "rankings": ["ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "answer": [[12, 2013], [158, 2016], [108, 2017]], "db_path": "data/spider/database/wta_1/wta_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "car_1", "query": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';", "query_toks": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "\"fiat\"", ";"], "query_toks_no_value": ["select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "join", "model_list", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "maker", "where", "t3", ".", "model", "=", "value"], "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "all", "countries", "that", "either", "have", "more", "than", "3", "car", "makers", "or", "produce", "fiat", "model", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [[1, "usa"], [2, "germany"], [4, "japan"], [5, "italy"]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "missing"}
{"metadata": {"db_id": "network_1", "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "where", "name", "=", "value"], "question": "What grade is Kyle in?", "question_toks": ["What", "grade", "is", "Kyle", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Highschooler": ["ID", "name", "grade"], "Friend": ["student_id", "friend_id"], "Likes": ["student_id", "liked_id"]}, "answer": [[12]], "db_path": "data/spider/database/network_1/network_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "City", "``", "Aberdeen", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"airlines": ["uid", "Airline", "Abbreviation", "Country"], "airports": ["City", "AirportCode", "AirportName", "Country", "CountryAbbrev"], "flights": ["Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "answer": [], "db_path": "data/spider/database/flight_2/flight_2.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "spurious"}
{"metadata": {"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.fname", ",", "T1.sex", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the first name and gender of the all the students who have more than one pet?", "question_toks": ["What", "is", "the", "first", "name", "and", "gender", "of", "the", "all", "the", "students", "who", "have", "more", "than", "one", "pet", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Student": ["StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code"], "Has_Pet": ["StuID", "PetID"], "Pets": ["PetID", "PetType", "pet_age", "weight"]}, "answer": [["Tracy", "F"]], "db_path": "data/spider/database/pets_1/pets_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "query_toks": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t2", ".", "department_name", ",", "t1", ".", "department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t1", ".", "department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and id of the department with the most number of degrees ?", "question_toks": ["What", "is", "the", "name", "and", "id", "of", "the", "department", "with", "the", "most", "number", "of", "degrees", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [["statistics", 8]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "concert_singer", "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "country", ",", "age", "FROM", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "question": "What are the names, countries, and ages for every singer in descending order of age?", "question_toks": ["What", "are", "the", "names", ",", "countries", ",", "and", "ages", "for", "every", "singer", "in", "descending", "order", "of", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"stadium": ["Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average"], "singer": ["Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male"], "concert": ["concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year"], "singer_in_concert": ["concert_ID", "Singer_ID"]}, "answer": [["Joe Sharp", "Netherlands", 52], ["John Nizinik", "France", 43], ["Rose White", "France", 41], ["Timbaland", "United States", 32], ["Justin Brown", "France", 29], ["Tribal King", "France", 25]], "db_path": "data/spider/database/concert_singer/concert_singer.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "dog_kennels", "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "query_toks": ["SELECT", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T2.age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t2", ".", "age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")"], "question": "Who owns the youngest dog? Give me his or her last name.", "question_toks": ["Who", "owns", "the", "youngest", "dog", "?", "Give", "me", "his", "or", "her", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Breeds": ["breed_code", "breed_name"], "Charges": ["charge_id", "charge_type", "charge_amount"], "Sizes": ["size_code", "size_description"], "Treatment_Types": ["treatment_type_code", "treatment_type_description"], "Owners": ["owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number"], "Dogs": ["dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed"], "Professionals": ["professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number"], "Treatments": ["treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "answer": [["Feil"], ["Fisher"], ["Rippin"]], "db_path": "data/spider/database/dog_kennels/dog_kennels.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "unclear"}
{"metadata": {"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Cylinders", "=", "4", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "For all of the 4 cylinder cars, which model has the most horsepower?", "question_toks": ["For", "all", "of", "the", "4", "cylinder", "cars", ",", "which", "model", "has", "the", "most", "horsepower", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["ford"]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "ERROR: program failed to execute"}
{"metadata": {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the high schooler who has the greatest number of friends?", "question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Highschooler": ["ID", "name", "grade"], "Friend": ["student_id", "friend_id"], "Likes": ["student_id", "liked_id"]}, "answer": [["Andrew"]], "db_path": "data/spider/database/network_1/network_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "world_1", "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "are", "the", "codes", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [["ABW", 7.4], ["AND", 44.6], ["ARG", 96.8], ["BLZ", 31.6], ["BOL", 87.7], ["CAN", 0.7], ["CHL", 89.7], ["COL", 99.0], ["CRI", 97.5], ["CUB", 100.0], ["DOM", 98.0], ["ECU", 93.0], ["ESP", 74.4], ["FRA", 0.4], ["GTM", 64.7], ["HND", 97.2], ["MEX", 92.1], ["NIC", 97.6], ["PAN", 76.8], ["PER", 79.8], ["PRI", 51.3], ["PRY", 55.1], ["SLV", 100.0], ["SWE", 0.6], ["URY", 95.7], ["USA", 7.5], ["VEN", 96.9], ["VIR", 13.3]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "ERROR: program failed to execute"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id"], "question": "What are the ids and names of each document, as well as the number of paragraphs in each?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "each", "document", ",", "as", "well", "as", "the", "number", "of", "paragraphs", "in", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [[3, "Summer Show", 1], [80, "Welcome to NY", 2], [2394, "Customer reviews", 3], [3830, "Do not panic", 1], [33930, "How Google people work", 1], [50123, "Learning French", 1], [651512, "How to write a CV", 2], [3540024, "Palm reading", 1], [16514113, "A history of Arts", 2], [385906526, "About Korea", 1]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "=", "1980", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "value"], "question": "how many cars were produced in 1980?", "question_toks": ["how", "many", "cars", "were", "produced", "in", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [[29]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "employee_hire_evaluation", "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC"], "query_toks_no_value": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc"], "question": "Return the name, location and district of all shops in descending order of number of products.", "question_toks": ["Return", "the", "name", ",", "location", "and", "district", "of", "all", "shops", "in", "descending", "order", "of", "number", "of", "products", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"employee": ["Employee_ID", "Name", "Age", "City"], "shop": ["Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name"], "hiring": ["Shop_ID", "Employee_ID", "Start_from", "Is_full_time"], "evaluation": ["Employee_ID", "Year_awarded", "Bonus"]}, "answer": [["FC Lahti", "Lahti", "Lahden Stadion"], ["HJK", "Helsinki", "Finnair Stadium"], ["FC Inter", "Turku", "Veritas Stadion"], ["FC Honka", "Espoo", "Tapiolan Urheilupuisto"], ["FF Jaro", "Jakobstad", "Jakobstads Centralplan"], ["FC KooTeePee", "Kotka", "Arto Tolsa Areena"], ["FC Haka", "Valkeakoski", "Tehtaan kentt\u00e4"], ["KuPS", "Kuopio", "Magnum Areena"], ["IFK Mariehamn", "Mariehamn", "Wikl\u00f6f Holding Arena"]], "db_path": "data/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "SELECT section_name ,  section_description FROM Sections", "query_toks": ["SELECT", "section_name", ",", "section_description", "FROM", "Sections"], "query_toks_no_value": ["select", "section_name", ",", "section_description", "from", "sections"], "question": "What are the names and descriptions for all the sections?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "for", "all", "the", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [["a", "non"], ["b", "voluptatem"], ["c", "qui"], ["d", "voluptas"], ["e", "ex"], ["f", "doloremque"], ["g", "provident"], ["h", "et"], ["j", "quis"], ["k", "nesciunt"], ["l", "ad"], ["o", "et"], ["p", "facilis"], ["u", "reprehenderit"], ["y", "qui"]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "query_toks": ["SELECT", "T2.template_id", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "WHERE", "T1.template_type_description", "=", "``", "Presentation", "''"], "query_toks_no_value": ["select", "t2", ".", "template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "where", "t1", ".", "template_type_description", "=", "value"], "question": "What are the template ids with template type description \"Presentation\".", "question_toks": ["What", "are", "the", "template", "ids", "with", "template", "type", "description", "``", "Presentation", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Presentation\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [[6], [7], [10]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "query_toks": ["SELECT", "template_type_code", "FROM", "Ref_template_types", "WHERE", "template_type_description", "=", "``", "Book", "''"], "query_toks_no_value": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value"], "question": "What is the template type code for template type description \"Book\".", "question_toks": ["What", "is", "the", "template", "type", "code", "for", "template", "type", "description", "``", "Book", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [["BK"]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the nationality that is most common across all people.", "question_toks": ["Give", "the", "nationality", "that", "is", "most", "common", "across", "all", "people", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"poker_player": ["Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings"], "people": ["People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "answer": [["Russia"]], "db_path": "data/spider/database/poker_player/poker_player.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "car_1", "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "query_toks": ["SELECT", "T1.CountryName", ",", "T1.CountryId", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", ",", "t1", ".", "countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the countries having at least one car maker? List name and id.", "question_toks": ["What", "are", "the", "countries", "having", "at", "least", "one", "car", "maker", "?", "List", "name", "and", "id", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["usa", 1], ["germany", 2], ["france", 3], ["japan", 4], ["italy", 5], ["sweden", 6], ["uk", 7], ["korea", 8]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "missing"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_ID", "=", "T2.document_ID", "WHERE", "T2.document_name", "=", "'Summer", "Show", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "How many paragraphs for the document with name 'Summer Show'?", "question_toks": ["How", "many", "paragraphs", "for", "the", "document", "with", "name", "'Summer", "Show", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Summer Show\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [[1]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "tvshow", "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Air_Date", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value"], "question": "When did the episode \"A Love of a Lifetime\" air?", "question_toks": ["When", "did", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "air", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"TV_Channel": ["id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option"], "TV_series": ["id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel"], "Cartoon": ["id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "answer": [["September 24, 2007"]], "db_path": "data/spider/database/tvshow/tvshow.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "What are airlines that have some flight departing from airport 'AHD'?", "question_toks": ["What", "are", "airlines", "that", "have", "some", "flight", "departing", "from", "airport", "'AHD", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"airlines": ["uid", "Airline", "Abbreviation", "Country"], "airports": ["City", "AirportCode", "AirportName", "Country", "CountryAbbrev"], "flights": ["Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "answer": [], "db_path": "data/spider/database/flight_2/flight_2.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "spurious"}
{"metadata": {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "GROUP", "BY", "T2.singer_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t2", ".", "singer_id"], "question": "What are the names of the singers and number of concerts for each person?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "and", "number", "of", "concerts", "for", "each", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"stadium": ["Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average"], "singer": ["Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male"], "concert": ["concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year"], "singer_in_concert": ["concert_ID", "Singer_ID"]}, "answer": [["Timbaland", 2], ["Justin Brown", 3], ["Rose White", 1], ["John Nizinik", 2], ["Tribal King", 2]], "db_path": "data/spider/database/concert_singer/concert_singer.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "world_1", "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Continent", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Continent", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which continent has the most diverse languages?", "question_toks": ["Which", "continent", "has", "the", "most", "diverse", "languages", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [["Africa"]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "ERROR: program failed to execute"}
{"metadata": {"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names and ids of all makers with more than 3 models?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "makers", "with", "more", "than", "3", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["General Motors", 4], ["Chrysler", 6]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "Count the number of United Airlines flights arriving in ASY Airport.", "question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "arriving", "in", "ASY", "Airport", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"airlines": ["uid", "Airline", "Abbreviation", "Country"], "airports": ["City", "AirportCode", "AirportName", "Country", "CountryAbbrev"], "flights": ["Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "answer": [[0]], "db_path": "data/spider/database/flight_2/flight_2.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates"], "question": "How many templates do we have?", "question_toks": ["How", "many", "templates", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [[20]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "tvshow", "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Weekly_Rank", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value"], "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "the", "weekly", "rank", "for", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"TV_Channel": ["id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option"], "TV_series": ["id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel"], "Cartoon": ["id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "answer": [[43.0]], "db_path": "data/spider/database/tvshow/tvshow.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "poker_player", "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "query_toks": ["SELECT", "Final_Table_Made", ",", "Best_Finish", "FROM", "poker_player"], "query_toks_no_value": ["select", "final_table_made", ",", "best_finish", "from", "poker_player"], "question": "List the final tables made and the best finishes of poker players.", "question_toks": ["List", "the", "final", "tables", "made", "and", "the", "best", "finishes", "of", "poker", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"poker_player": ["Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings"], "people": ["People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "answer": [[42.0, 1.0], [10.0, 2.0], [21.0, 1.0], [19.0, 2.0], [26.0, 3.0]], "db_path": "data/spider/database/poker_player/poker_player.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "world_1", "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "What is the number of nations that use English and Dutch?", "question_toks": ["What", "is", "the", "number", "of", "nations", "that", "use", "English", "and", "Dutch", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [[3]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")"], "question": "How many dogs have an age below the average?", "question_toks": ["How", "many", "dogs", "have", "an", "age", "below", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Breeds": ["breed_code", "breed_name"], "Charges": ["charge_id", "charge_type", "charge_amount"], "Sizes": ["size_code", "size_description"], "Treatment_Types": ["treatment_type_code", "treatment_type_description"], "Owners": ["owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number"], "Dogs": ["dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed"], "Professionals": ["professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number"], "Treatments": ["treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "answer": [[9]], "db_path": "data/spider/database/dog_kennels/dog_kennels.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "tvshow", "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Title", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "question_toks": ["What", "is", "the", "title", "of", "all", "the", "cartools", "that", "are", "on", "the", "TV", "Channel", "with", "the", "series", "name", "``", "Sky", "Radio", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"TV_Channel": ["id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option"], "TV_series": ["id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel"], "Cartoon": ["id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "answer": [["The Rise of the Blue Beetle!"], ["Return of the Fearsome Fangs!"]], "db_path": "data/spider/database/tvshow/tvshow.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "dog_kennels", "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "query_toks": ["SELECT", "email_address", ",", "cell_number", ",", "home_phone", "FROM", "professionals"], "query_toks_no_value": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals"], "question": "List the email, cell phone and home phone of all the professionals.", "question_toks": ["List", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "all", "the", "professionals", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Breeds": ["breed_code", "breed_name"], "Charges": ["charge_id", "charge_type", "charge_amount"], "Sizes": ["size_code", "size_description"], "Treatment_Types": ["treatment_type_code", "treatment_type_description"], "Owners": ["owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number"], "Dogs": ["dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed"], "Professionals": ["professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number"], "Treatments": ["treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "answer": [["deanna.schuster@example.com", "(275)939-2435x80863", "+71(6)2898266914"], ["lucile.shanahan@example.org", "889-940-2676", "+02(1)0259033559"], ["uboehm@example.org", "(369)908-7311x065", "325-155-0801x7005"], ["lourdes.lowe@example.net", "00230569697", "312.216.3352"], ["mekhi.little@example.org", "011.193.9081x3186", "1-609-566-2752x25197"], ["jacynthe.mclaughlin@example.net", "139-321-7313", "+43(5)1132733868"], ["lambert62@example.org", "499-434-0215x1628", "022.529.0550x1319"], ["goyette.roosevelt@example.net", "328.842.3792", "891.475.2256"], ["schneider.kathryne@example.org", "962-983-8109x3509", "320-508-6023"], ["jerrod.bahringer@example.org", "461-801-2600", "(230)338-3342x585"], ["west.eula@example.net", "609-405-2990", "(920)304-4499x59146"], ["marquardt.furman@example.org", "1-181-670-9466", "246-951-0080x76716"], ["delphine29@example.com", "880-659-7577x736", "346.594.3739"], ["cole.margarita@example.org", "1-185-137-1945x409", "971.048.3763x9404"], ["jeichmann@example.com", "1-258-285-4707x8020", "1-138-287-3775"]], "db_path": "data/spider/database/dog_kennels/dog_kennels.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "car_1", "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "query_toks": ["SELECT", "T1.horsepower", "FROM", "CARS_DATA", "AS", "T1", "ORDER", "BY", "T1.accelerate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1", ".", "accelerate", "desc", "limit", "value"], "question": "What is the horsepower of the car with the largest accelerate?", "question_toks": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "largest", "accelerate", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["71"]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "pets_1", "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "What is the average weight for each type of pet?", "question_toks": ["What", "is", "the", "average", "weight", "for", "each", "type", "of", "pet", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Student": ["StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code"], "Has_Pet": ["StuID", "PetID"], "Pets": ["PetID", "PetType", "pet_age", "weight"]}, "answer": [[12.0, "cat"], [11.350000000000001, "dog"]], "db_path": "data/spider/database/pets_1/pets_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "poker_player", "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "query_toks": ["SELECT", "T2.Money_Rank", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "height", "desc", "limit", "value"], "question": "Return the money rank of the poker player with the greatest height.", "question_toks": ["Return", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "greatest", "height", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"poker_player": ["Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings"], "people": ["People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "answer": [[68.0]], "db_path": "data/spider/database/poker_player/poker_player.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "ERROR: program failed to execute"}
{"metadata": {"db_id": "tvshow", "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Country", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "question_toks": ["Which", "country", "has", "the", "most", "of", "TV", "Channels", "?", "List", "the", "country", "and", "number", "of", "TV", "Channels", "it", "has", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"TV_Channel": ["id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option"], "TV_series": ["id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel"], "Cartoon": ["id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "answer": [["Italy", 12]], "db_path": "data/spider/database/tvshow/tvshow.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "wta_1", "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "query_toks": ["SELECT", "tourney_name", "FROM", "matches", "GROUP", "BY", "tourney_name", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of tournaments that have more than 10 matches?", "question_toks": ["What", "are", "the", "names", "of", "tournaments", "that", "have", "more", "than", "10", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"players": ["player_id", "first_name", "last_name", "hand", "birth_date", "country_code"], "matches": ["best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year"], "rankings": ["ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "answer": [["Australian Open"], ["Cincinnati"], ["French Open"], ["Indian Wells"], ["Miami"], ["Singapore"], ["Us Open"], ["WTA Championships"], ["Wimbledon"]], "db_path": "data/spider/database/wta_1/wta_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.model", "=", "T2.model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.id", "WHERE", "T3.year", ">", "1980", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "where", "t3", ".", "year", ">", "value"], "question": "Which distinct car models are the produced after 1980?", "question_toks": ["Which", "distinct", "car", "models", "are", "the", "produced", "after", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["plymouth"], ["buick"], ["dodge"], ["chevrolet"], ["toyota"], ["honda"], ["subaru"], ["datsun"], ["mazda"], ["ford"], ["volkswagen"], ["renault"], ["peugeot"], ["saab"], ["volvo"], ["oldsmobile"], ["chrysler"], ["pontiac"], ["amc"], ["mercury"], ["nissan"]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "missing"}
{"metadata": {"db_id": "world_1", "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "is", "the", "total", "number", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [[1, 7.4], [1, 44.6], [1, 96.8], [1, 31.6], [1, 87.7], [1, 0.7], [1, 89.7], [1, 99.0], [1, 97.5], [1, 100.0], [1, 98.0], [1, 93.0], [1, 74.4], [1, 0.4], [1, 64.7], [1, 97.2], [1, 92.1], [1, 97.6], [1, 76.8], [1, 79.8], [1, 51.3], [1, 55.1], [1, 100.0], [1, 0.6], [1, 95.7], [1, 7.5], [1, 96.9], [1, 13.3]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "unclear"}
{"metadata": {"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "Which country does Airline \"JetBlue Airways\" belong to?", "question_toks": ["Which", "country", "does", "Airline", "``", "JetBlue", "Airways", "''", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"airlines": ["uid", "Airline", "Abbreviation", "Country"], "airports": ["City", "AirportCode", "AirportName", "Country", "CountryAbbrev"], "flights": ["Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "answer": [["USA"]], "db_path": "data/spider/database/flight_2/flight_2.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "car_1", "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "query_toks": ["SELECT", "CountryName", "FROM", "countries", "EXCEPT", "SELECT", "T1.CountryName", "FROM", "countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.countryId", "=", "T2.Country", ";"], "query_toks_no_value": ["select", "countryname", "from", "countries", "except", "select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country"], "question": "What are the name of the countries where there is not a single car maker?", "question_toks": ["What", "are", "the", "name", "of", "the", "countries", "where", "there", "is", "not", "a", "single", "car", "maker", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["australia"], ["brazil"], ["egypt"], ["mexico"], ["new zealand"], ["nigeria"], ["russia"]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "museum_visit", "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "query_toks": ["SELECT", "museum_id", ",", "name", "FROM", "museum", "ORDER", "BY", "num_of_staff", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "museum_id", ",", "name", "from", "museum", "order", "by", "num_of_staff", "desc", "limit", "value"], "question": "Find the id and name of the museum that has the most staff members?", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "museum", "that", "has", "the", "most", "staff", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"museum": ["Museum_ID", "Name", "Num_of_Staff", "Open_Year"], "visitor": ["ID", "Name", "Level_of_membership", "Age"], "visit": ["Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "answer": [[1, "Plaza Museum"]], "db_path": "data/spider/database/museum_visit/museum_visit.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have a flight with source airport AHD?", "question_toks": ["Which", "airlines", "have", "a", "flight", "with", "source", "airport", "AHD", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"airlines": ["uid", "Airline", "Abbreviation", "Country"], "airports": ["City", "AirportCode", "AirportName", "Country", "CountryAbbrev"], "flights": ["Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "answer": [], "db_path": "data/spider/database/flight_2/flight_2.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "spurious"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_summary_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the degree summary name that has the most number of students enrolled?", "question_toks": ["What", "is", "the", "degree", "summary", "name", "that", "has", "the", "most", "number", "of", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [["Bachelor"]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "wta_1", "query": "SELECT count(*) ,  hand FROM players GROUP BY hand", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "hand", "FROM", "players", "GROUP", "BY", "hand"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand"], "question": "Find the number of players for each hand type.", "question_toks": ["Find", "the", "number", "of", "players", "for", "each", "hand", "type", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"players": ["player_id", "first_name", "last_name", "hand", "birth_date", "country_code"], "matches": ["best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year"], "rankings": ["ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "answer": [[954, ""], [487, "L"], [5028, "R"], [14193, "U"]], "db_path": "data/spider/database/wta_1/wta_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "orchestra", "query": "SELECT count(DISTINCT Nationality) FROM conductor", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor"], "question": "Count the number of different nationalities of conductors.", "question_toks": ["Count", "the", "number", "of", "different", "nationalities", "of", "conductors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"conductor": ["Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work"], "orchestra": ["Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format"], "performance": ["Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share"], "show": ["Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "answer": [[3]], "db_path": "data/spider/database/orchestra/orchestra.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "tvshow", "query": "SELECT Episode FROM TV_series ORDER BY rating", "query_toks": ["SELECT", "Episode", "FROM", "TV_series", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "episode", "from", "tv_series", "order", "by", "rating"], "question": "List the Episode of all TV series sorted by rating.", "question_toks": ["List", "the", "Episode", "of", "all", "TV", "series", "sorted", "by", "rating", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"TV_Channel": ["id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option"], "TV_series": ["id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel"], "Cartoon": ["id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "answer": [["The Hanged Man"], ["Double Down"], ["Home By Another Way"], ["Keepers"], ["Emily"], ["Blowback"], ["The Legend of Dylan McCleen"], ["Winterland"], ["The Year of the Rabbit"], ["Game Three"], ["Friendly Skies"], ["A Love of a Lifetime"]], "db_path": "data/spider/database/tvshow/tvshow.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "wta_1", "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "country_code", "FROM", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "value"], "question": "Find the first name and country code of the oldest player.", "question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"players": ["player_id", "first_name", "last_name", "hand", "birth_date", "country_code"], "matches": ["best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year"], "rankings": ["ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "answer": [["Thelma", "AUS"]], "db_path": "data/spider/database/wta_1/wta_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", ",", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id"], "question": "How many models does each car maker produce? List maker full name, id and the number.", "question_toks": ["How", "many", "models", "does", "each", "car", "maker", "produce", "?", "List", "maker", "full", "name", ",", "id", "and", "the", "number", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["American Motor Company", 1, 1], ["Volkswagen", 2, 2], ["BMW", 3, 1], ["General Motors", 4, 5], ["Ford Motor Company", 5, 3], ["Chrysler", 6, 4], ["Citroen", 7, 1], ["Nissan Motors", 8, 2], ["Fiat", 9, 1], ["Honda", 11, 1], ["Mazda", 12, 1], ["Daimler Benz", 13, 2], ["Opel", 14, 1], ["Peugeaut", 15, 1], ["Renault", 16, 1], ["Saab", 17, 1], ["Subaru", 18, 1], ["Toyota", 19, 2], ["Triumph", 20, 1], ["Volvo", 21, 1], ["Kia Motors", 22, 1], ["Hyundai", 23, 1]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is name of the country that speaks the largest number of languages?", "question_toks": ["What", "is", "name", "of", "the", "country", "that", "speaks", "the", "largest", "number", "of", "languages", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [["United States"]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "world_1", "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Continent", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Chinese", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "What is the number of distinct continents where Chinese is spoken?", "question_toks": ["What", "is", "the", "number", "of", "distinct", "continents", "where", "Chinese", "is", "spoken", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [[4]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "query_toks": ["SELECT", "zip_postcode", "FROM", "Addresses", "WHERE", "city", "=", "'Port", "Chelsea", "'"], "query_toks_no_value": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value"], "question": "What is the zip code for Port Chelsea?", "question_toks": ["What", "is", "the", "zip", "code", "for", "Port", "Chelsea", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Port Chelsea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [["148"]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "voter_1", "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "votes", "WHERE", "state", "=", "'NY", "'", "OR", "state", "=", "'CA", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "votes", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "What are the number of votes from state 'NY' or 'CA'?", "question_toks": ["What", "are", "the", "number", "of", "votes", "from", "state", "'NY", "'", "or", "'CA", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NY\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"AREA_CODE_STATE": ["area_code", "state"], "CONTESTANTS": ["contestant_number", "contestant_name"], "VOTES": ["vote_id", "phone_number", "state", "contestant_number", "created"]}, "answer": [[3]], "db_path": "data/spider/database/voter_1/voter_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "tvshow", "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "query_toks": ["SELECT", "count", "(", "DISTINCT", "series_name", ")", ",", "count", "(", "DISTINCT", "content", ")", "FROM", "TV_Channel", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel"], "question": "List the number of different series names and contents in the TV Channel table.", "question_toks": ["List", "the", "number", "of", "different", "series", "names", "and", "contents", "in", "the", "TV", "Channel", "table", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"TV_Channel": ["id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option"], "TV_series": ["id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel"], "Cartoon": ["id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "answer": [[15, 1]], "db_path": "data/spider/database/tvshow/tvshow.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "network_1", "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Return the number of likes that the high schooler named Kyle has.", "question_toks": ["Return", "the", "number", "of", "likes", "that", "the", "high", "schooler", "named", "Kyle", "has", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Highschooler": ["ID", "name", "grade"], "Friend": ["student_id", "friend_id"], "Likes": ["student_id", "liked_id"]}, "answer": [[1]], "db_path": "data/spider/database/network_1/network_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "query_toks": ["SELECT", "template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "GROUP", "BY", "template_type_code"], "query_toks_no_value": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code"], "question": "Show all template type codes and number of templates for each.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "number", "of", "templates", "for", "each", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [["AD", 3], ["BK", 6], ["CV", 2], ["PP", 6], ["PPT", 3]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "world_1", "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "Find the name, population and expected life length of asian country with the largest area?", "question_toks": ["Find", "the", "name", ",", "population", "and", "expected", "life", "length", "of", "asian", "country", "with", "the", "largest", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [["China", 1277558000, 71.4]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "dog_kennels", "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "query_toks": ["SELECT", "DISTINCT", "breed_code", ",", "size_code", "FROM", "dogs"], "query_toks_no_value": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs"], "question": "What are all the possible breed type and size type combinations?", "question_toks": ["What", "are", "all", "the", "possible", "breed", "type", "and", "size", "type", "combinations", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Breeds": ["breed_code", "breed_name"], "Charges": ["charge_id", "charge_type", "charge_amount"], "Sizes": ["size_code", "size_description"], "Treatment_Types": ["treatment_type_code", "treatment_type_description"], "Owners": ["owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number"], "Dogs": ["dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed"], "Professionals": ["professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number"], "Treatments": ["treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "answer": [["ESK", "LGE"], ["BUL", "LGE"], ["BUL", "MED"], ["HUS", "MED"], ["ESK", "SML"], ["HUS", "SML"], ["ESK", "MED"]], "db_path": "data/spider/database/dog_kennels/dog_kennels.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "museum_visit", "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "Level_of_membership", "FROM", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "value", "order", "by", "age", "desc"], "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "question_toks": ["Find", "the", "name", "and", "membership", "level", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "sort", "by", "their", "age", "from", "old", "to", "young", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"museum": ["Museum_ID", "Name", "Num_of_Staff", "Open_Year"], "visitor": ["ID", "Name", "Level_of_membership", "Age"], "visit": ["Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "answer": [["Fernando Gago", 6], ["Gonzalo Higua\u00edn ", 8], ["Guti Midfielder", 5]], "db_path": "data/spider/database/museum_visit/museum_visit.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "course_teach", "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name"], "question": "Show names of teachers and the number of courses they teach.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "number", "of", "courses", "they", "teach", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"course": ["Course_ID", "Staring_Date", "Course"], "teacher": ["Teacher_ID", "Name", "Age", "Hometown"], "course_arrange": ["Course_ID", "Teacher_ID", "Grade"]}, "answer": [["Anne Walker", 2], ["Gustaaf Deloor", 1], ["Kearsley Brown", 1], ["Lucy Wong", 1], ["Vicente Carretero", 1]], "db_path": "data/spider/database/course_teach/course_teach.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "query_toks": ["SELECT", "semester_name", "FROM", "Semesters", "WHERE", "semester_id", "NOT", "IN", "(", "SELECT", "semester_id", "FROM", "Student_Enrolment", ")"], "query_toks_no_value": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")"], "question": "Which semesters do not have any student enrolled? List the semester name.", "question_toks": ["Which", "semesters", "do", "not", "have", "any", "student", "enrolled", "?", "List", "the", "semester", "name", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[true, 8, [0, [0, 28, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [["fall 2010"], ["spring 2013"], ["spring 2014"], ["spring 2016"], ["spring 2017"], ["winter 2018"]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Master", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value"], "question": "Find the semester when both Master students and Bachelor students got enrolled in.", "question_toks": ["Find", "the", "semester", "when", "both", "Master", "students", "and", "Bachelor", "students", "got", "enrolled", "in", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Master\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [[13]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "ERROR: program failed to execute"}
{"metadata": {"db_id": "concert_singer", "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "query_toks": ["SELECT", "T2.name", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "JOIN", "concert", "AS", "T3", "ON", "T1.concert_id", "=", "T3.concert_id", "WHERE", "T3.year", "=", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "join", "concert", "as", "t3", "on", "t1", ".", "concert_id", "=", "t3", ".", "concert_id", "where", "t3", ".", "year", "=", "value"], "question": "What are the names of the singers who performed in a concert in 2014?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "performed", "in", "a", "concert", "in", "2014", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"stadium": ["Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average"], "singer": ["Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male"], "concert": ["concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year"], "singer_in_concert": ["concert_ID", "Singer_ID"]}, "answer": [["Timbaland"], ["Justin Brown"], ["John Nizinik"], ["Justin Brown"], ["Tribal King"], ["Rose White"]], "db_path": "data/spider/database/concert_singer/concert_singer.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "unclear"}
{"metadata": {"db_id": "world_1", "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "query_toks": ["SELECT", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Name", "=", "``", "Brazil", "''"], "query_toks_no_value": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value"], "question": "Give me Brazil\u2019s population and life expectancies.", "question_toks": ["Give", "me", "Brazil\u2019s", "population", "and", "life", "expectancies", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [[170115000, 62.9]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "value"], "question": "What is the first, middle, and last name of the first student to register?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "first", "student", "to", "register", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Addresses": ["address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details"], "Courses": ["course_id", "course_name", "course_description", "other_details"], "Departments": ["department_id", "department_name", "department_description", "other_details"], "Degree_Programs": ["degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details"], "Sections": ["section_id", "course_id", "section_name", "section_description", "other_details"], "Semesters": ["semester_id", "semester_name", "semester_description", "other_details"], "Students": ["student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details"], "Student_Enrolment": ["student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details"], "Student_Enrolment_Courses": ["student_course_id", "course_id", "student_enrolment_id"], "Transcripts": ["transcript_id", "transcript_date", "other_details"], "Transcript_Contents": ["student_course_id", "transcript_id"]}, "answer": [["Timmothy", "Anna", "Ward"]], "db_path": "data/spider/database/student_transcripts_tracking/student_transcripts_tracking.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Brazil", "'", "INTERSECT", "SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Ireland", "'"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value"], "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "question_toks": ["What", "are", "the", "ids", "of", "documents", "that", "contain", "the", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Ireland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [[16514113]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT template_type_code FROM Templates", "query_toks": ["SELECT", "DISTINCT", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "distinct", "template_type_code", "from", "templates"], "question": "What are the different template type codes?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [["PP"], ["BK"], ["PPT"], ["AD"], ["CV"]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "concert_singer", "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "query_toks": ["SELECT", "T2.concert_name", ",", "T2.theme", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "concert", "AS", "T2", "ON", "T1.concert_id", "=", "T2.concert_id", "GROUP", "BY", "T2.concert_id"], "query_toks_no_value": ["select", "t2", ".", "concert_name", ",", "t2", ".", "theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1", ".", "concert_id", "=", "t2", ".", "concert_id", "group", "by", "t2", ".", "concert_id"], "question": "Show the name and theme for all concerts and the number of singers in each concert.", "question_toks": ["Show", "the", "name", "and", "theme", "for", "all", "concerts", "and", "the", "number", "of", "singers", "in", "each", "concert", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"stadium": ["Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average"], "singer": ["Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male"], "concert": ["concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year"], "singer_in_concert": ["concert_ID", "Singer_ID"]}, "answer": [["Auditions", "Free choice", 3], ["Super bootcamp", "Free choice 2", 2], ["Home Visits", "Bleeding Love", 1], ["Week 1", "Wide Awake", 1], ["Week 1", "Happy Tonight", 2], ["Week 2", "Party All Night", 1]], "db_path": "data/spider/database/concert_singer/concert_singer.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "missing"}
{"metadata": {"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Teacher_id", "NOT", "IN", "(", "SELECT", "Teacher_id", "FROM", "course_arrange", ")"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")"], "question": "What are the names of the teachers whose courses have not been arranged?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "courses", "have", "not", "been", "arranged", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"course": ["Course_ID", "Staring_Date", "Course"], "teacher": ["Teacher_ID", "Name", "Age", "Hometown"], "course_arrange": ["Course_ID", "Teacher_ID", "Grade"]}, "answer": [["Joseph Huts"], ["John Deloor"]], "db_path": "data/spider/database/course_teach/course_teach.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "world_1", "query": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"", "query_toks": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "\"t\"", "and", "t2.language", "=", "\"chinese\"", "and", "t1.continent", "=", "\"asia\""], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "join", "city", "as", "t3", "on", "t1", ".", "code", "=", "t3", ".", "countrycode", "where", "t2", ".", "isofficial", "=", "value", "and", "t2", ".", "language", "=", "value", "and", "t1", ".", "continent", "=", "value"], "question": "Which unique cities are in Asian countries where Chinese is the official language ?", "question_toks": ["Which", "unique", "cities", "are", "in", "Asian", "countries", "where", "Chinese", "is", "the", "official", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"t\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"chinese\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "spurious"}
{"metadata": {"db_id": "world_1", "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Continent", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Chinese", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "How many continents speak Chinese?", "question_toks": ["How", "many", "continents", "speak", "Chinese", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [[4]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "ERROR: program failed to execute"}
{"metadata": {"db_id": "wta_1", "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "loser_name", "FROM", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "value"], "question": "find the names of loser and winner who played in the match with greatest number of minutes.", "question_toks": ["find", "the", "names", "of", "loser", "and", "winner", "who", "played", "in", "the", "match", "with", "greatest", "number", "of", "minutes", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"players": ["player_id", "first_name", "last_name", "hand", "birth_date", "country_code"], "matches": ["best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year"], "rankings": ["ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "answer": [["Petra Kvitova", "Angelique Kerber"]], "db_path": "data/spider/database/wta_1/wta_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''", "INTERSECT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "intersect", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have departing flights from both APG and CVO airports?", "question_toks": ["Which", "airlines", "have", "departing", "flights", "from", "both", "APG", "and", "CVO", "airports", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "db_table_headers": {"airlines": ["uid", "Airline", "Abbreviation", "Country"], "airports": ["City", "AirportCode", "AirportName", "Country", "CountryAbbrev"], "flights": ["Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "answer": [], "db_path": "data/spider/database/flight_2/flight_2.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "spurious"}
{"metadata": {"db_id": "world_1", "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "query_toks": ["SELECT", "LANGUAGE", ",", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode"], "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "question_toks": ["What", "are", "the", "country", "codes", "of", "the", "different", "countries", ",", "and", "what", "are", "the", "languages", "spoken", "by", "the", "greatest", "percentage", "of", "people", "for", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [["Papiamento", "ABW", 76.7], ["Pashto", "AFG", 52.4], ["Ovimbundu", "AGO", 37.2], ["English", "AIA", 0.0], ["Albaniana", "ALB", 97.9], ["Spanish", "AND", 44.6], ["Papiamento", "ANT", 86.2], ["Arabic", "ARE", 42.0], ["Spanish", "ARG", 96.8], ["Armenian", "ARM", 93.4], ["Samoan", "ASM", 90.6], ["Creole English", "ATG", 95.7], ["English", "AUS", 81.2], ["German", "AUT", 92.0], ["Azerbaijani", "AZE", 89.0], ["Kirundi", "BDI", 98.1], ["Dutch", "BEL", 59.2], ["Fon", "BEN", 39.8], ["Mossi", "BFA", 50.2], ["Bengali", "BGD", 97.7], ["Bulgariana", "BGR", 83.2], ["Arabic", "BHR", 67.7], ["Creole English", "BHS", 89.7], ["Serbo-Croatian", "BIH", 99.2], ["Belorussian", "BLR", 65.6], ["English", "BLZ", 50.8], ["English", "BMU", 100.0], ["Spanish", "BOL", 87.7], ["Portuguese", "BRA", 97.5], ["Bajan", "BRB", 95.1], ["Malay", "BRN", 45.5], ["Dzongkha", "BTN", 50.0], ["Tswana", "BWA", 75.5], ["Gbaya", "CAF", 23.8], ["English", "CAN", 60.4], ["English", "CCK", 0.0], ["German", "CHE", 63.6], ["Spanish", "CHL", 89.7], ["Chinese", "CHN", 92.0], ["Akan", "CIV", 30.0], ["Fang", "CMR", 19.7], ["Luba", "COD", 18.0], ["Kongo", "COG", 51.5], ["English", "COK", 0.0], ["Spanish", "COL", 99.0], ["Comorian", "COM", 75.0], ["Crioulo", "CPV", 100.0], ["Spanish", "CRI", 97.5], ["Spanish", "CUB", 100.0], ["Chinese", "CXR", 0.0], ["English", "CYM", 0.0], ["Greek", "CYP", 74.1], ["Czech", "CZE", 81.2], ["German", "DEU", 91.3], ["Somali", "DJI", 43.9], ["Creole English", "DMA", 100.0], ["Danish", "DNK", 93.5], ["Spanish", "DOM", 98.0], ["Arabic", "DZA", 86.0], ["Spanish", "ECU", 93.0], ["Arabic", "EGY", 98.8], ["Tigrinja", "ERI", 49.1], ["Arabic", "ESH", 100.0], ["Spanish", "ESP", 74.4], ["Estonian", "EST", 65.3], ["Oromo", "ETH", 31.0], ["Finnish", "FIN", 92.7], ["Fijian", "FJI", 50.8], ["English", "FLK", 0.0], ["French", "FRA", 93.6], ["Faroese", "FRO", 100.0], ["Trukese", "FSM", 41.6], ["Fang", "GAB", 35.8], ["English", "GBR", 97.3], ["Georgiana", "GEO", 71.7], ["Akan", "GHA", 52.4], ["English", "GIB", 88.9], ["Ful", "GIN", 38.6], ["Creole French", "GLP", 95.0], ["Malinke", "GMB", 34.1], ["Crioulo", "GNB", 36.4], ["Fang", "GNQ", 84.8], ["Greek", "GRC", 98.5], ["Creole English", "GRD", 100.0], ["Greenlandic", "GRL", 87.5], ["Spanish", "GTM", 64.7], ["Creole French", "GUF", 94.3], ["English", "GUM", 37.5], ["Creole English", "GUY", 96.4], ["Canton Chinese", "HKG", 88.7], ["Spanish", "HND", 97.2], ["Serbo-Croatian", "HRV", 95.9], ["Haiti Creole", "HTI", 100.0], ["Hungarian", "HUN", 98.5], ["Javanese", "IDN", 39.4], ["Hindi", "IND", 39.9], ["English", "IRL", 98.4], ["Persian", "IRN", 45.7], ["Arabic", "IRQ", 77.2], ["Icelandic", "ISL", 95.7], ["Hebrew", "ISR", 63.1], ["Italian", "ITA", 94.1], ["Creole English", "JAM", 94.2], ["Arabic", "JOR", 97.9], ["Japanese", "JPN", 99.1], ["Kazakh", "KAZ", 46.0], ["Kikuyu", "KEN", 20.9], ["Kirgiz", "KGZ", 59.7], ["Khmer", "KHM", 88.6], ["Kiribati", "KIR", 98.9], ["Creole English", "KNA", 100.0], ["Korean", "KOR", 99.9], ["Arabic", "KWT", 78.1], ["Lao", "LAO", 67.2], ["Arabic", "LBN", 93.0], ["Kpelle", "LBR", 19.5], ["Arabic", "LBY", 96.0], ["Creole French", "LCA", 80.0], ["German", "LIE", 89.0], ["Singali", "LKA", 60.3], ["Sotho", "LSO", 85.0], ["Lithuanian", "LTU", 81.6], ["Luxembourgish", "LUX", 64.4], ["Latvian", "LVA", 55.1], ["Canton Chinese", "MAC", 85.6], ["Arabic", "MAR", 65.0], ["French", "MCO", 41.9], ["Romanian", "MDA", 61.9], ["Malagasy", "MDG", 98.9], ["Dhivehi", "MDV", 100.0], ["Spanish", "MEX", 92.1], ["Marshallese", "MHL", 96.8], ["Macedonian", "MKD", 66.5], ["Bambara", "MLI", 31.8], ["Maltese", "MLT", 95.8], ["Burmese", "MMR", 69.0], ["Mongolian", "MNG", 78.8], ["Philippene Languages", "MNP", 34.1], ["Makua", "MOZ", 27.8], ["Hassaniya", "MRT", 81.7], ["English", "MSR", 0.0], ["Creole French", "MTQ", 96.6], ["Creole French", "MUS", 70.6], ["Chichewa", "MWI", 58.3], ["Malay", "MYS", 58.4], ["Mahor\u00e9", "MYT", 41.9], ["Ovambo", "NAM", 50.7], ["Malenasian Languages", "NCL", 45.4], ["Hausa", "NER", 53.1], ["English", "NFK", 0.0], ["Joruba", "NGA", 21.4], ["Spanish", "NIC", 97.6], ["English", "NIU", 0.0], ["Dutch", "NLD", 95.6], ["Norwegian", "NOR", 96.6], ["Nepali", "NPL", 50.4], ["Nauru", "NRU", 57.5], ["English", "NZL", 87.0], ["Arabic", "OMN", 76.7], ["Punjabi", "PAK", 48.2], ["Spanish", "PAN", 76.8], ["Pitcairnese", "PCN", 0.0], ["Spanish", "PER", 79.8], ["Pilipino", "PHL", 29.3], ["Palau", "PLW", 82.2], ["Papuan Languages", "PNG", 78.1], ["Polish", "POL", 97.6], ["Spanish", "PRI", 51.3], ["Korean", "PRK", 99.9], ["Portuguese", "PRT", 99.0], ["Spanish", "PRY", 55.1], ["Arabic", "PSE", 95.9], ["Tahitian", "PYF", 46.4], ["Arabic", "QAT", 40.7], ["Creole French", "REU", 91.5], ["Romanian", "ROM", 90.7], ["Russian", "RUS", 86.6], ["Rwanda", "RWA", 100.0], ["Arabic", "SAU", 95.0], ["Arabic", "SDN", 49.4], ["Wolof", "SEN", 48.1], ["Chinese", "SGP", 77.1], ["English", "SHN", 0.0], ["Norwegian", "SJM", 0.0], ["Malenasian Languages", "SLB", 85.6], ["Mende", "SLE", 34.8], ["Spanish", "SLV", 100.0], ["Italian", "SMR", 100.0], ["Somali", "SOM", 98.3], ["French", "SPM", 0.0], ["Crioulo", "STP", 86.3], ["Sranantonga", "SUR", 81.0], ["Slovak", "SVK", 85.6], ["Slovene", "SVN", 87.9], ["Swedish", "SWE", 89.5], ["Swazi", "SWZ", 89.9], ["Seselwa", "SYC", 91.3], ["Arabic", "SYR", 90.0], ["English", "TCA", 0.0], ["Sara", "TCD", 27.7], ["Ewe", "TGO", 23.2], ["Thai", "THA", 52.6], ["Tadzhik", "TJK", 62.2], ["English", "TKL", 0.0], ["Turkmenian", "TKM", 76.7], ["Portuguese", "TMP", 0.0], ["Tongan", "TON", 98.3], ["English", "TTO", 93.5], ["Arabic", "TUN", 69.9], ["Turkish", "TUR", 87.6], ["Tuvalu", "TUV", 92.5], ["Min", "TWN", 66.7], ["Nyamwesi", "TZA", 21.1], ["Ganda", "UGA", 18.1], ["Ukrainian", "UKR", 64.7], ["English", "UMI", 0.0], ["Spanish", "URY", 95.7], ["English", "USA", 86.2], ["Uzbek", "UZB", 72.6], ["Italian", "VAT", 0.0], ["Creole English", "VCT", 99.1], ["Spanish", "VEN", 96.9], ["English", "VGB", 0.0], ["English", "VIR", 81.7], ["Vietnamese", "VNM", 86.8], ["Bislama", "VUT", 56.6], ["Futuna", "WLF", 0.0], ["Samoan-English", "WSM", 52.0], ["Arabic", "YEM", 99.6], ["Serbo-Croatian", "YUG", 75.2], ["Zulu", "ZAF", 22.7], ["Bemba", "ZMB", 29.7], ["Shona", "ZWE", 72.1]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "extra"}
{"metadata": {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights departing from City \"Aberdeen \"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "City", "``", "Aberdeen", "``", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"airlines": ["uid", "Airline", "Abbreviation", "Country"], "airports": ["City", "AirportCode", "AirportName", "Country", "CountryAbbrev"], "flights": ["Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "answer": [], "db_path": "data/spider/database/flight_2/flight_2.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "spurious"}
{"metadata": {"db_id": "orchestra", "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "orchestra", "WHERE", "Major_Record_Format", "=", "``", "CD", "''", "OR", "Major_Record_Format", "=", "``", "DVD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value"], "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "question_toks": ["Find", "the", "number", "of", "orchestras", "whose", "record", "format", "is", "``", "CD", "''", "or", "``", "DVD", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"conductor": ["Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work"], "orchestra": ["Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format"], "performance": ["Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share"], "show": ["Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "answer": [[11]], "db_path": "data/spider/database/orchestra/orchestra.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "query_toks": ["SELECT", "document_id", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id"], "question": "Show all document ids and the number of paragraphs in each document. Order by document id.", "question_toks": ["Show", "all", "document", "ids", "and", "the", "number", "of", "paragraphs", "in", "each", "document", ".", "Order", "by", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [[3, 1], [80, 2], [2394, 3], [3830, 1], [33930, 1], [50123, 1], [651512, 2], [3540024, 1], [16514113, 2], [385906526, 1]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "tvshow", "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Country", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the country with the most number of TV Channels and how many does it have?", "question_toks": ["What", "is", "the", "country", "with", "the", "most", "number", "of", "TV", "Channels", "and", "how", "many", "does", "it", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"TV_Channel": ["id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option"], "TV_series": ["id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel"], "Cartoon": ["id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "answer": [["Italy", 12]], "db_path": "data/spider/database/tvshow/tvshow.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "poker_player", "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "query_toks": ["SELECT", "avg", "(", "T2.Earnings", ")", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Height", ">", "200"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "height", ">", "value"], "question": "Give average earnings of poker players who are taller than 200.", "question_toks": ["Give", "average", "earnings", "of", "poker", "players", "who", "are", "taller", "than", "200", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"poker_player": ["Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings"], "people": ["People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "answer": [[309445.0]], "db_path": "data/spider/database/poker_player/poker_player.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", ",", "document_description", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents"], "question": "What are the ids, names, and descriptions for all documents?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "descriptions", "for", "all", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [[0, "Introduction of OS", "n"], [1, "Understanding DB", "y"], [3, "Summer Show", "u"], [76, "Robbin CV", "y"], [80, "Welcome to NY", "h"], [82, "Data base", "w"], [2394, "Customer reviews", "y"], [3830, "Do not panic", "k"], [33930, "How Google people work", "z"], [50123, "Learning French", "r"], [651512, "How to write a CV", "f"], [801801, "How to read a book", "w"], [3540024, "Palm reading", "y"], [16514113, "A history of Arts", "h"], [385906526, "About Korea", "b"]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "network_1", "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "min", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "NOT", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "What is the lowest grade of students who do not have any friends?", "question_toks": ["What", "is", "the", "lowest", "grade", "of", "students", "who", "do", "not", "have", "any", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Highschooler": ["ID", "name", "grade"], "Friend": ["student_id", "friend_id"], "Likes": ["student_id", "liked_id"]}, "answer": [[10]], "db_path": "data/spider/database/network_1/network_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "network_1", "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "EXCEPT", "SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id"], "query_toks_no_value": ["select", "name", "from", "highschooler", "except", "select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id"], "question": "What are the names of students who have no friends?", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "no", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "db_table_headers": {"Highschooler": ["ID", "name", "grade"], "Friend": ["student_id", "friend_id"], "Likes": ["student_id", "liked_id"]}, "answer": [["Brittany"], ["John"]], "db_path": "data/spider/database/network_1/network_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "world_1", "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "query_toks": ["SELECT", "avg", "(", "GNP", ")", ",", "sum", "(", "population", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "US", "Territory", "''"], "query_toks_no_value": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "Give the mean GNP and total population of nations which are considered US territory.", "question_toks": ["Give", "the", "mean", "GNP", "and", "total", "population", "of", "nations", "which", "are", "considered", "US", "territory", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [[510.3333333333333, 329000]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "population", "<", "(", "SELECT", "min", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "Which African countries have a smaller population than that of any country in Asia?", "question_toks": ["Which", "African", "countries", "have", "a", "smaller", "population", "than", "that", "of", "any", "country", "in", "Asia", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"city": ["ID", "Name", "CountryCode", "District", "Population"], "sqlite_sequence": ["name", "seq"], "country": ["Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2"], "countrylanguage": ["CountryCode", "Language", "IsOfficial", "Percentage"]}, "answer": [["British Indian Ocean Territory"], ["Mayotte"], ["Saint Helena"], ["Sao Tome and Principe"], ["Seychelles"]], "db_path": "data/spider/database/world_1/world_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "subtle"}
{"metadata": {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "HAVING", "count", "(", "*", ")", "<", "3"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "value"], "question": "What are the codes of template types that have fewer than 3 templates?", "question_toks": ["What", "are", "the", "codes", "of", "template", "types", "that", "have", "fewer", "than", "3", "templates", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Ref_Template_Types": ["Template_Type_Code", "Template_Type_Description"], "Templates": ["Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details"], "Documents": ["Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details"], "Paragraphs": ["Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "answer": [["CV"]], "db_path": "data/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "network_1", "query": "SELECT name FROM Highschooler WHERE grade  =  10", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "WHERE", "grade", "=", "10"], "query_toks_no_value": ["select", "name", "from", "highschooler", "where", "grade", "=", "value"], "question": "Show the names of all high schoolers in grade 10.", "question_toks": ["Show", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Highschooler": ["ID", "name", "grade"], "Friend": ["student_id", "friend_id"], "Likes": ["student_id", "liked_id"]}, "answer": [["Haley"], ["Andrew"], ["Kris"], ["Brittany"]], "db_path": "data/spider/database/network_1/network_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "singer", "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "query_toks": ["SELECT", "T2.Title", ",", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id"], "question": "Show titles of songs and names of singers.", "question_toks": ["Show", "titles", "of", "songs", "and", "names", "of", "singers", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"singer": ["Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship"], "song": ["Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "answer": [["Do They Know It's Christmas", "Liliane Bettencourt"], ["F**k It (I Don't Want You Back)", "Liliane Bettencourt"], ["Cha Cha Slide", "Christy Walton"], ["Call on Me", "Iris Fontbona"], ["Yeah", "Christy Walton"], ["All This Time", "Gina Rinehart"], ["Left Outside Alone", "Jacqueline Mars"], ["Mysterious Girl", "Susanne Klatten"]], "db_path": "data/spider/database/singer/singer.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "ORDER", "BY", "Age", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "value"], "question": "What is the hometown of the youngest teacher?", "question_toks": ["What", "is", "the", "hometown", "of", "the", "youngest", "teacher", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"course": ["Course_ID", "Staring_Date", "Course"], "teacher": ["Teacher_ID", "Name", "Age", "Hometown"], "course_arrange": ["Course_ID", "Teacher_ID", "Grade"]}, "answer": [["Farnworth Municipal Borough"]], "db_path": "data/spider/database/course_teach/course_teach.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "poker_player", "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "query_toks": ["SELECT", "T1.Birth_Date", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "asc", "limit", "value"], "question": "What is the birth date of the poker player with the lowest earnings?", "question_toks": ["What", "is", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"poker_player": ["Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings"], "people": ["People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "answer": [["August 8, 1986"]], "db_path": "data/spider/database/poker_player/poker_player.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "WHERE", "Year_of_Founded", ">", "2008"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "where", "year_of_founded", ">", "value"], "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "question_toks": ["Please", "show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "orchestras", "founded", "after", "2008", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"conductor": ["Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work"], "orchestra": ["Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format"], "performance": ["Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share"], "show": ["Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "answer": [["Igor Stravinsky"]], "db_path": "data/spider/database/orchestra/orchestra.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "same"}
{"metadata": {"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of students who have at least 2 likes.", "question_toks": ["Show", "the", "names", "of", "students", "who", "have", "at", "least", "2", "likes", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"Highschooler": ["ID", "name", "grade"], "Friend": ["student_id", "friend_id"], "Likes": ["student_id", "liked_id"]}, "answer": [], "db_path": "data/spider/database/network_1/network_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "spurious"}
{"metadata": {"db_id": "wta_1", "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.country_code", ",", "T1.birth_date", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "ORDER", "BY", "T2.winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "country_code", ",", "t1", ".", "birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "order", "by", "t2", ".", "winner_rank_points", "desc", "limit", "value"], "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "question_toks": ["Find", "the", "first", "name", ",", "country", "code", "and", "birth", "date", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "in", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"players": ["player_id", "first_name", "last_name", "hand", "birth_date", "country_code"], "matches": ["best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year"], "rankings": ["ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "answer": [["Serena", "USA", 19810926]], "db_path": "data/spider/database/wta_1/wta_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "concert_singer", "query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "query_toks": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", ">", "value", "group", "by", "t2", ".", "stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "of", "the", "stadium", "with", "the", "most", "concerts", "after", "2013", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 2013.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"stadium": ["Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average"], "singer": ["Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male"], "concert": ["concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year"], "singer_in_concert": ["concert_ID", "Singer_ID"]}, "answer": [["Somerset Park", 11998]], "db_path": "data/spider/database/concert_singer/concert_singer.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "different"}
{"metadata": {"db_id": "singer", "query": "select citizenship from singer group by citizenship order by count(*) desc limit 1", "query_toks": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common singer citizenship ?", "question_toks": ["What", "is", "the", "most", "common", "singer", "citizenship", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"singer": ["Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship"], "song": ["Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "answer": [["United States"]], "db_path": "data/spider/database/singer/singer.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "extra"}
{"metadata": {"db_id": "car_1", "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T2.horsepower", ",", "T1.Make", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.cylinders", "=", "3", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "horsepower", ",", "t1", ".", "make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "question_toks": ["What", "is", "the", "maximum", "horsepower", "and", "the", "make", "of", "the", "car", "models", "with", "3", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [["97", "mazda rx2 coupe"]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "ERROR: program failed to execute"}
{"metadata": {"db_id": "wta_1", "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the year that has the most number of matches.", "question_toks": ["Find", "the", "year", "that", "has", "the", "most", "number", "of", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "db_table_headers": {"players": ["player_id", "first_name", "last_name", "hand", "birth_date", "country_code"], "matches": ["best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year"], "rankings": ["ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "answer": [[2016]], "db_path": "data/spider/database/wta_1/wta_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "extra"}
{"metadata": {"db_id": "car_1", "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "query_toks": ["SELECT", "avg", "(", "Weight", ")", ",", "YEAR", "FROM", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year"], "question": "What is the average weight and year for each year?", "question_toks": ["What", "is", "the", "average", "weight", "and", "year", "for", "each", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "db_table_headers": {"continents": ["ContId", "Continent"], "countries": ["CountryId", "CountryName", "Continent"], "car_makers": ["Id", "Maker", "FullName", "Country"], "model_list": ["ModelId", "Maker", "Model"], "car_names": ["MakeId", "Model", "Make"], "cars_data": ["Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "answer": [[3441.3142857142857, 1970], [2960.344827586207, 1971], [3237.714285714286, 1972], [3419.025, 1973], [2877.925925925926, 1974], [3176.8, 1975], [3078.735294117647, 1976], [2997.3571428571427, 1977], [2861.8055555555557, 1978], [3055.344827586207, 1979], [2436.655172413793, 1980], [2532.1666666666665, 1981], [2453.548387096774, 1982]], "db_path": "data/spider/database/car_1/car_1.sqlite", "pad_token_id": 50256, "correct_token_idx": 4273, "incorrect_token_idx": 150}, "evaluation": "extra"}
